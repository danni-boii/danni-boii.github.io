{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danny Boy\\\\Documents\\\\GitHub\\\\danni-boii.github.io\\\\src\\\\WeatherCard.js\";\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/loading.svg\";\nimport { ReactComponent as CogIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/cog.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherCardWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n_c = WeatherCardWrapper;\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n_c2 = Location;\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 30px;\n`;\n_c3 = Description;\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n_c4 = CurrentWeather;\nconst Temperature = styled.div`\n  color: ${({\n  theme\n}) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n_c5 = Temperature;\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n_c6 = Celsius;\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n_c7 = AirFlow;\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n_c8 = Rain;\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({\n  isLoading\n}) => isLoading ? '1.5s' : '0s'};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n_c9 = Refresh;\nconst Cog = styled(CogIcon)`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\n_c10 = Cog;\n\nconst WeatherCard = props => {\n  const {\n    weatherElement,\n    moment,\n    fetchData,\n    setCurrentPage,\n    cityName\n  } = props;\n  const {\n    observationTime,\n    temperature,\n    windSpeed,\n    description,\n    weatherCode,\n    rainPossibility,\n    comfortability,\n    isLoading\n  } = weatherElement;\n  return /*#__PURE__*/_jsxDEV(WeatherCardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Cog, {\n      onClick: () => setCurrentPage('WeatherSetting')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Location, {\n      children: [\" \", cityName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Description, {\n      children: [\" \", description, \" \", comfortability, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 46\n    }, this), \" \", /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      children: [/*#__PURE__*/_jsxDEV(Temperature, {\n        children: [\" \", Math.round(temperature), \" \", /*#__PURE__*/_jsxDEV(Celsius, {\n          children: \" \\xB0C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 51\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        weatherCode: weatherCode,\n        moment: moment || 'day'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(AirFlow, {\n      children: [/*#__PURE__*/_jsxDEV(AirFlowIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), \" \", windSpeed, \"m / h \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Rain, {\n      children: [/*#__PURE__*/_jsxDEV(RainIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), \" \", Math.round(rainPossibility), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Refresh, {\n      onClick: fetchData,\n      isLoading: isLoading,\n      children: [\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A \", new Intl.DateTimeFormat('zh-TW', {\n        hour: 'numeric',\n        minute: 'numeric'\n      }).format(dayjs(observationTime)), \" \", ' ', \" \", isLoading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 53\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 14\n  }, this);\n};\n\n_c11 = WeatherCard;\nexport default WeatherCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"WeatherCardWrapper\");\n$RefreshReg$(_c2, \"Location\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"CurrentWeather\");\n$RefreshReg$(_c5, \"Temperature\");\n$RefreshReg$(_c6, \"Celsius\");\n$RefreshReg$(_c7, \"AirFlow\");\n$RefreshReg$(_c8, \"Rain\");\n$RefreshReg$(_c9, \"Refresh\");\n$RefreshReg$(_c10, \"Cog\");\n$RefreshReg$(_c11, \"WeatherCard\");","map":{"version":3,"sources":["C:/Users/Danny Boy/Documents/GitHub/danni-boii.github.io/src/WeatherCard.js"],"names":["React","dayjs","WeatherIcon","WeatherCardWrapper","styled","div","theme","boxShadow","foregroundColor","Location","titleColor","Description","textColor","CurrentWeather","Temperature","temperatureColor","Celsius","AirFlow","Rain","Refresh","isLoading","Cog","CogIcon","WeatherCard","props","weatherElement","moment","fetchData","setCurrentPage","cityName","observationTime","temperature","windSpeed","description","weatherCode","rainPossibility","comfortability","Math","round","Intl","DateTimeFormat","hour","minute","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from './images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './images/refresh.svg';\nimport { ReactComponent as LoadingIcon } from './images/loading.svg';\nimport { ReactComponent as CogIcon } from './images/cog.svg';\n\nconst WeatherCardWrapper = styled.div `\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n\nconst Location = styled.div `\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.div `\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 30px;\n`;\n\nconst CurrentWeather = styled.div `\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Temperature = styled.div `\n  color: ${({ theme }) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n\nconst Celsius = styled.div `\n  font-weight: normal;\n  font-size: 42px;\n`;\n\nconst AirFlow = styled.div `\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Rain = styled.div `\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Refresh = styled.div `\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({ isLoading }) => (isLoading ? '1.5s' : '0s')};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst Cog = styled(CogIcon)\n`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\n\nconst WeatherCard = (props) => {\n    const { weatherElement, moment, fetchData, setCurrentPage, cityName } = props;\n    const {\n        observationTime,\n        temperature,\n        windSpeed,\n        description,\n        weatherCode,\n        rainPossibility,\n        comfortability,\n        isLoading,\n    } = weatherElement;\n\n    return ( <\n        WeatherCardWrapper >\n        <\n        Cog onClick = {\n            () => setCurrentPage('WeatherSetting') }\n        /> <\n        Location > { cityName } < /Location> <\n        Description > { description } { comfortability } <\n        /Description> <\n        CurrentWeather >\n        <\n        Temperature > { Math.round(temperature) } < Celsius > °C < /Celsius> <\n        /Temperature> <\n        WeatherIcon weatherCode = { weatherCode }\n        moment = { moment || 'day' }\n        /> <\n        /CurrentWeather> <\n        AirFlow >\n        <\n        AirFlowIcon / > { windSpeed }\n        m / h <\n        /AirFlow> <\n        Rain >\n        <\n        RainIcon / > { Math.round(rainPossibility) } %\n        <\n        /Rain> <\n        Refresh onClick = { fetchData }\n        isLoading = { isLoading } >\n        最後觀測時間： {\n            new Intl.DateTimeFormat('zh-TW', {\n                hour: 'numeric',\n                minute: 'numeric',\n            }).format(dayjs(observationTime))\n        } { ' ' } { isLoading ? < LoadingIcon / > : < RefreshIcon / > } <\n        /Refresh> <\n        /WeatherCardWrapper>\n    );\n};\n\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}