{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danny Boy\\\\Documents\\\\GitHub\\\\danni-boii.github.io\\\\src\\\\WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherApp = () => {\n  _s();\n\n  // console.log('--- invoke function component ---');\n  const storageCity = localStorage.getItem('cityName');\n  const [currentCity, setCurrentCity] = useState(storageCity || '臺北市');\n  const currentLocation = findLocation(currentCity) || {};\n  const [weatherElement, fetchData] = useWeatherApi(currentLocation);\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [currentPage, setCurrentPage] = useState('WeatherCard');\n  const moment = useMemo(() => getMoment(currentLocation.sunriseCityName), [currentLocation.sunriseCityName]);\n  useEffect(() => {\n    setCurrentTheme(moment === 'day' ? 'light' : 'dark');\n  }, [moment]);\n  useEffect(() => {\n    localStorage.setItem('cityName', currentCity);\n  }, [currentCity]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[currentTheme],\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [currentPage === 'WeatherCard' && /*#__PURE__*/_jsxDEV(WeatherCard, {\n        cityName: currentLocation.cityName,\n        weatherElement: weatherElement,\n        moment: moment,\n        fetchData: fetchData,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), currentPage === 'WeatherSetting' && /*#__PURE__*/_jsxDEV(WeatherSetting, {\n        cityName: currentLocation.cityName,\n        setCurrentCity: setCurrentCity,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherApp, \"1vUJAEaF57yS3ppzyq9REZJ46qs=\", true);\n\n_c = WeatherApp;\nexport default WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["C:/Users/Danny Boy/Documents/GitHub/danni-boii.github.io/src/WeatherApp.js"],"names":["React","useState","useEffect","useMemo","WeatherApp","storageCity","localStorage","getItem","currentCity","setCurrentCity","currentLocation","findLocation","weatherElement","fetchData","useWeatherApi","currentTheme","setCurrentTheme","currentPage","setCurrentPage","moment","getMoment","sunriseCityName","setItem","theme","cityName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AACA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACI,WAAW,IAAI,KAAhB,CAA9C;AACA,QAAMK,eAAe,GAAGC,YAAY,CAACH,WAAD,CAAZ,IAA6B,EAArD;AAEA,QAAM,CAACI,cAAD,EAAiBC,SAAjB,IAA8BC,aAAa,CAACJ,eAAD,CAAjD;AAEA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,aAAD,CAA9C;AAEA,QAAMkB,MAAM,GAAGhB,OAAO,CAAC,MAAMiB,SAAS,CAACV,eAAe,CAACW,eAAjB,CAAhB,EAAmD,CACvEX,eAAe,CAACW,eADuD,CAAnD,CAAtB;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,eAAe,CAACG,MAAM,KAAK,KAAX,GAAmB,OAAnB,GAA6B,MAA9B,CAAf;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACgB,OAAb,CAAqB,UAArB,EAAiCd,WAAjC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEe,KAAK,CAACR,YAAD,CAA3B;AAAA,2BACE,QAAC,SAAD;AAAA,iBACGE,WAAW,KAAK,aAAhB,iBACC,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEP,eAAe,CAACc,QAD5B;AAEE,QAAA,cAAc,EAAEZ,cAFlB;AAGE,QAAA,MAAM,EAAEO,MAHV;AAIE,QAAA,SAAS,EAAEN,SAJb;AAKE,QAAA,cAAc,EAAEK;AALlB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAWGD,WAAW,KAAK,gBAAhB,iBACC,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEP,eAAe,CAACc,QAD5B;AAEE,QAAA,cAAc,EAAEf,cAFlB;AAGE,QAAA,cAAc,EAAES;AAHlB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9CD;;GAAMd,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\n\n\n\nconst WeatherApp = () => {\n  // console.log('--- invoke function component ---');\n  const storageCity = localStorage.getItem('cityName');\n  const [currentCity, setCurrentCity] = useState(storageCity || '臺北市');\n  const currentLocation = findLocation(currentCity) || {};\n\n  const [weatherElement, fetchData] = useWeatherApi(currentLocation);\n\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [currentPage, setCurrentPage] = useState('WeatherCard');\n\n  const moment = useMemo(() => getMoment(currentLocation.sunriseCityName), [\n    currentLocation.sunriseCityName,\n  ]);\n\n  useEffect(() => {\n    setCurrentTheme(moment === 'day' ? 'light' : 'dark');\n  }, [moment]);\n\n  useEffect(() => {\n    localStorage.setItem('cityName', currentCity);\n  }, [currentCity]);\n\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n      <Container>\n        {currentPage === 'WeatherCard' && (\n          <WeatherCard\n            cityName={currentLocation.cityName}\n            weatherElement={weatherElement}\n            moment={moment}\n            fetchData={fetchData}\n            setCurrentPage={setCurrentPage}\n          />\n        )}\n\n        {currentPage === 'WeatherSetting' && (\n          <WeatherSetting\n            cityName={currentLocation.cityName}\n            setCurrentCity={setCurrentCity}\n            setCurrentPage={setCurrentPage}\n          />\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default WeatherApp;\n"]},"metadata":{},"sourceType":"module"}